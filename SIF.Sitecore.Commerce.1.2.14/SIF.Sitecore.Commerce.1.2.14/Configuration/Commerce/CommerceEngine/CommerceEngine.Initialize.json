// -------------------------------------------------------------------------- //
//         Sitecore Install Framework - Initialize Commerce Services          //
//                                                                            //
//  Run this configuration to initialize Commerce Services.                   //
//                                                                            //
//  NOTE: Only single line comments are accepted in configurations.           //
// -------------------------------------------------------------------------- //

{
  "Parameters": {
    "UrlIdentityServerGetToken": {
      "Type": "string",
      "DefaultValue": "https://identity.dev.local:5050/connect/token",
      "Description": "Url IdentityServer GetToken"
    },
    "CommerceShopsServicesPort": {
      "Type": "string",
      "Description": "Commerce Shops Services port"
    },
    "SitecoreAdminAccount": {
      "Type": "psobject",
      "Description": "Sitecore Admin account."
    },
    "CommerceServicesPostfix": {
      "Type": "string",
      "DefaultValue": "Sc9",
      "Description": "The Commerce Engine postfix for services names"
    },
	  "CommerceShopsURI": {
      "Type": "string",
      "Description": "Commerce Shops URI"
    },
    "CommerceInstallDir": { "Type": "string", "DefaultValue": "", "Description": "Path to Install Commerce!" },
  },
  "Variables": {
    "CommerceOps": "[concat('CommerceOps_', parameter('CommerceServicesPostfix'))]",
    "CommerceShops": "[concat('CommerceShops_', parameter('CommerceServicesPostfix'))]",
    "CommerceAuthoring": "[concat('CommerceAuthoring_', parameter('CommerceServicesPostfix'))]",
    "CommerceMinions": "[concat('CommerceMinions_', parameter('CommerceServicesPostfix'))]",
    "CommerceOpsPhysicalPath": "[concat(parameter('CommerceInstallDir'), '\\', variable('CommerceOps'))]",
    "CommerceShopsPhysicalPath": "[concat(parameter('CommerceInstallDir'), '\\', variable('CommerceShops'))]",
    "CommerceAuthoringPhysicalPath": "[concat(parameter('CommerceInstallDir'), '\\', variable('CommerceAuthoring'))]",
    "CommerceMinionsPhysicalPath": "[concat(parameter('CommerceInstallDir'), '\\', variable('CommerceMinions'))]",
    "UrlCommerceShopsServicesBootstrap": "[concat('https://', concat(parameter('CommerceShopsURI'), '/commerceops/Bootstrap()'))]",
    "InitializeParam": "/commerceops/InitializeEnvironment(environment='envNameValue')",
	  "UrlInitializeEnvironment": "[concat('https://', concat(parameter('CommerceShopsURI'), variable('InitializeParam')))]",
    "EnsureSyncDefaultContentPathsParam": "/commerceops/EnsureSyncDefaultContentPaths(environment='envNameValue',shopName='CommerceEngineDefaultStorefront')",
	  "UrlEnsureSyncDefaultContentPaths": "[concat('https://', concat(parameter('CommerceShopsURI'), variable('EnsureSyncDefaultContentPathsParam')))]",
	  "UrlCheckCommandStatus": "[concat('https://', concat(parameter('CommerceShopsURI'), '/commerceops/CheckCommandStatus(taskId=taskIdValue)'))]"
  },
   "Modules": ["InitializeCommerce"],
  "Tasks": {
    //"DisableCsrfValidation": {
    //  "Type": "DisableCsrfValidation",
    //  "Params": {
    //    "CommerceServicesPathCollection": [
    //      "[variable('CommerceOpsPhysicalPath')]",
    //      "[variable('CommerceShopsPhysicalPath')]",
    //      "[variable('CommerceAuthoringPhysicalPath')]",
    //      "[variable('CommerceMinionsPhysicalPath')]"
    //    ]
    //  }
    //},
    "GetIdServerToken": {
      "Type": "GetIdServerToken",
      "Params": {
        "SitecoreAdminAccount": "[parameter('SitecoreAdminAccount')]",
        "UrlIdentityServerGetToken": "[parameter('UrlIdentityServerGetToken')]"
      }
    },
    "BootStrapCommerceServices": {
      "Type": "BootStrapCommerceServices",
      "Params": {
        "UrlCommerceShopsServicesBootstrap": "[variable('UrlCommerceShopsServicesBootstrap')]"
      }
    },
     "EnsureSyncDefaultContentPaths": {
       "Type": "EnsureSyncDefaultContentPaths",
       "Params": {
         "UrlEnsureSyncDefaultContentPaths": "[variable('UrlEnsureSyncDefaultContentPaths')]",
         "UrlCheckCommandStatus": "[variable('UrlCheckCommandStatus')]",
         "Environments": [
           "AdventureWorksAuthoring",
           "HabitatAuthoring"
         ]
       }
     },
    "InitializeCommerceServices": {
      "Type": "InitializeCommerceServices",
      "Params": {
        "UrlInitializeEnvironment": "[variable('UrlInitializeEnvironment')]",
        "UrlCheckCommandStatus": "[variable('UrlCheckCommandStatus')]",
        "Environments": [
          "AdventureWorksAuthoring",
          "HabitatAuthoring"
        ]
      }
    }
	//,
    //"EnableCsrfValidation": {
     // "Type": "EnableCsrfValidation",
      //"Params": {
       // "CommerceServicesPathCollection": [
       //   "[variable('CommerceOpsPhysicalPath')]",
       //   "[variable('CommerceShopsPhysicalPath')]",
      //    "[variable('CommerceAuthoringPhysicalPath')]",
      //    "[variable('CommerceMinionsPhysicalPath')]"
     //   ]
     // }
    //}
  }
}